DIGEST d1a2eae4b1b50977ee210300d6858a5f
FTactics
R665:668 Poly <> <> lib
prf 944:949 <> silly1
R971:973 Coq.Init.Datatypes <> nat ind
R1024:1026 Coq.Init.Logic <> :type_scope:x_'='_x not
R1019:1019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1021:1021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 Tactics <> o var
R1020:1020 Tactics <> n var
R1027:1027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1029:1029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1031:1031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1030:1030 Tactics <> p var
R1028:1028 Tactics <> m var
R1002:1004 Coq.Init.Logic <> :type_scope:x_'='_x not
R997:997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R999:999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1001:1001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 Tactics <> o var
R998:998 Tactics <> n var
R1005:1005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1007:1007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1009:1009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1008:1008 Tactics <> p var
R1006:1006 Tactics <> n var
R983:985 Coq.Init.Logic <> :type_scope:x_'='_x not
R982:982 Tactics <> n var
R986:986 Tactics <> m var
prf 1555:1560 <> silly2
R1582:1584 Coq.Init.Datatypes <> nat ind
R1666:1668 Coq.Init.Logic <> :type_scope:x_'='_x not
R1661:1661 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1663:1663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1665:1665 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 Tactics <> o var
R1662:1662 Tactics <> n var
R1669:1669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1671:1671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1673:1673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1672:1672 Tactics <> p var
R1670:1670 Tactics <> m var
R1623:1625 Coq.Init.Datatypes <> nat ind
R1643:1645 Coq.Init.Logic <> :type_scope:x_'='_x not
R1638:1638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1640:1640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1642:1642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 Tactics <> o var
R1639:1639 Tactics <> q var
R1646:1646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1648:1648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1650:1650 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1649:1649 Tactics <> p var
R1647:1647 Tactics <> r var
R1630:1632 Coq.Init.Logic <> :type_scope:x_'='_x not
R1629:1629 Tactics <> q var
R1633:1633 Tactics <> r var
R1594:1596 Coq.Init.Logic <> :type_scope:x_'='_x not
R1593:1593 Tactics <> n var
R1597:1597 Tactics <> m var
prf 2184:2190 <> silly2a
R2208:2210 Coq.Init.Datatypes <> nat ind
R2302:2304 Coq.Init.Logic <> :type_scope:x_'='_x not
R2299:2299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2301:2301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2300:2300 Tactics <> n var
R2305:2305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2307:2307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2306:2306 Tactics <> m var
R2257:2259 Coq.Init.Datatypes <> nat ind
R2283:2285 Coq.Init.Logic <> :type_scope:x_'='_x not
R2280:2280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2282:2282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2281:2281 Tactics <> q var
R2286:2286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2288:2288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2287:2287 Tactics <> r var
R2268:2270 Coq.Init.Logic <> :type_scope:x_'='_x not
R2263:2263 Poly <> ::'('_x_','_x_')' not
R2265:2265 Poly <> ::'('_x_','_x_')' not
R2267:2267 Poly <> ::'('_x_','_x_')' not
R2264:2264 Tactics <> q var
R2266:2266 Tactics <> q var
R2271:2271 Poly <> ::'('_x_','_x_')' not
R2273:2273 Poly <> ::'('_x_','_x_')' not
R2275:2275 Poly <> ::'('_x_','_x_')' not
R2272:2272 Tactics <> r var
R2274:2274 Tactics <> r var
R2224:2226 Coq.Init.Logic <> :type_scope:x_'='_x not
R2219:2219 Poly <> ::'('_x_','_x_')' not
R2221:2221 Poly <> ::'('_x_','_x_')' not
R2223:2223 Poly <> ::'('_x_','_x_')' not
R2220:2220 Tactics <> n var
R2222:2222 Tactics <> n var
R2227:2227 Poly <> ::'('_x_','_x_')' not
R2229:2229 Poly <> ::'('_x_','_x_')' not
R2231:2231 Poly <> ::'('_x_','_x_')' not
R2228:2228 Tactics <> m var
R2230:2230 Tactics <> m var
prf 2490:2497 <> silly_ex
R2591:2593 Coq.Init.Logic <> :type_scope:x_'='_x not
R2585:2588 Basics <> oddb def
R2594:2597 Basics <> true constr
R2569:2571 Coq.Init.Logic <> :type_scope:x_'='_x not
R2562:2566 Basics <> evenb def
R2572:2575 Basics <> true constr
R2545:2547 Coq.Init.Logic <> :type_scope:x_'='_x not
R2535:2538 Basics <> oddb def
R2541:2541 Coq.Init.Datatypes <> S constr
R2543:2543 Tactics <> n var
R2548:2551 Basics <> true constr
R2524:2526 Coq.Init.Logic <> :type_scope:x_'='_x not
R2517:2521 Basics <> evenb def
R2523:2523 Tactics <> n var
R2527:2530 Basics <> true constr
prf 2873:2887 <> silly3_firsttry
R2903:2905 Coq.Init.Datatypes <> nat ind
R2961:2963 Coq.Init.Logic <> :type_scope:x_'='_x not
R2942:2948 Basics <> beq_nat def
R2951:2951 Coq.Init.Datatypes <> S constr
R2954:2954 Coq.Init.Datatypes <> S constr
R2956:2956 Tactics <> n var
R2964:2967 Basics <> true constr
R2918:2920 Coq.Init.Logic <> :type_scope:x_'='_x not
R2914:2917 Basics <> true constr
R2921:2927 Basics <> beq_nat def
R2929:2929 Tactics <> n var
prf 3507:3519 <> rev_exercise1
R3538:3541 Poly <> list ind
R3543:3545 Coq.Init.Datatypes <> nat ind
R3575:3577 Coq.Init.Logic <> :type_scope:x_'='_x not
R3573:3574 Tactics <> l' var
R3578:3580 Poly <> rev def
R3582:3582 Tactics <> l var
R3555:3557 Coq.Init.Logic <> :type_scope:x_'='_x not
R3554:3554 Tactics <> l var
R3558:3560 Poly <> rev def
R3562:3563 Tactics <> l' var
R3638:3651 Poly <> rev_involutive prfax
R3638:3651 Poly <> rev_involutive prfax
def 4263:4278 <> trans_eq_example
R4304:4306 Coq.Init.Datatypes <> nat ind
R4364:4366 Coq.Init.Logic <> :type_scope:x_'='_x not
R4359:4359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4361:4361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4363:4363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4362:4362 Tactics <> b var
R4360:4360 Tactics <> a var
R4367:4367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4369:4369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4371:4371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4370:4370 Tactics <> f var
R4368:4368 Tactics <> e var
R4342:4344 Coq.Init.Logic <> :type_scope:x_'='_x not
R4337:4337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4339:4339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4341:4341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4340:4340 Tactics <> d var
R4338:4338 Tactics <> c var
R4345:4345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4347:4347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4349:4349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4348:4348 Tactics <> f var
R4346:4346 Tactics <> e var
R4320:4322 Coq.Init.Logic <> :type_scope:x_'='_x not
R4315:4315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4317:4317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4319:4319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4318:4318 Tactics <> b var
R4316:4316 Tactics <> a var
R4323:4323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4325:4325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4327:4327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4326:4326 Tactics <> d var
R4324:4324 Tactics <> c var
prf 4628:4635 <> trans_eq
R4664:4664 Tactics <> X var
R4689:4691 Coq.Init.Logic <> :type_scope:x_'='_x not
R4688:4688 Tactics <> n var
R4692:4692 Tactics <> o var
R4680:4682 Coq.Init.Logic <> :type_scope:x_'='_x not
R4679:4679 Tactics <> m var
R4683:4683 Tactics <> o var
R4671:4673 Coq.Init.Logic <> :type_scope:x_'='_x not
R4670:4670 Tactics <> n var
R4674:4674 Tactics <> m var
def 4947:4963 <> trans_eq_example'
R4989:4991 Coq.Init.Datatypes <> nat ind
R5049:5051 Coq.Init.Logic <> :type_scope:x_'='_x not
R5044:5044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5046:5046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5048:5048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5047:5047 Tactics <> b var
R5045:5045 Tactics <> a var
R5052:5052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5054:5054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5056:5056 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5055:5055 Tactics <> f var
R5053:5053 Tactics <> e var
R5027:5029 Coq.Init.Logic <> :type_scope:x_'='_x not
R5022:5022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5024:5024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5026:5026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5025:5025 Tactics <> d var
R5023:5023 Tactics <> c var
R5030:5030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5032:5032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5034:5034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5033:5033 Tactics <> f var
R5031:5031 Tactics <> e var
R5005:5007 Coq.Init.Logic <> :type_scope:x_'='_x not
R5000:5000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5002:5002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5004:5004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5003:5003 Tactics <> b var
R5001:5001 Tactics <> a var
R5008:5008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5010:5010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5012:5012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5011:5011 Tactics <> d var
R5009:5009 Tactics <> c var
R5527:5527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5529:5529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5531:5531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5509:5516 Tactics <> trans_eq thm
R5527:5527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5529:5529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5531:5531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5509:5516 Tactics <> trans_eq thm
def 5863:5879 <> trans_eq_exercise
R5901:5903 Coq.Init.Datatypes <> nat ind
R5957:5957 Coq.Init.Logic <> :type_scope:x_'='_x not
R5963:5967 Coq.Init.Logic <> :type_scope:x_'='_x not
R5978:5978 Coq.Init.Logic <> :type_scope:x_'='_x not
R5959:5961 Basics <> :nat_scope:x_'+'_x not
R5958:5958 Tactics <> n var
R5962:5962 Tactics <> p var
R5968:5975 Basics <> minustwo def
R5977:5977 Tactics <> o var
R5937:5937 Coq.Init.Logic <> :type_scope:x_'='_x not
R5943:5946 Coq.Init.Logic <> :type_scope:x_'='_x not
R5939:5941 Basics <> :nat_scope:x_'+'_x not
R5938:5938 Tactics <> n var
R5942:5942 Tactics <> p var
R5947:5947 Tactics <> m var
R5913:5916 Coq.Init.Logic <> :type_scope:x_'='_x not
R5927:5927 Coq.Init.Logic <> :type_scope:x_'='_x not
R5912:5912 Tactics <> m var
R5917:5924 Basics <> minustwo def
R5926:5926 Tactics <> o var
prf 7515:7525 <> S_injective
R7543:7545 Coq.Init.Datatypes <> nat ind
R7567:7569 Coq.Init.Logic <> :type_scope:x_'='_x not
R7566:7566 Tactics <> n var
R7570:7570 Tactics <> m var
R7554:7556 Coq.Init.Logic <> :type_scope:x_'='_x not
R7551:7551 Coq.Init.Datatypes <> S constr
R7553:7553 Tactics <> n var
R7557:7557 Coq.Init.Datatypes <> S constr
R7559:7559 Tactics <> m var
prf 8065:8077 <> inversion_ex1
R8097:8099 Coq.Init.Datatypes <> nat ind
R8129:8131 Coq.Init.Logic <> :type_scope:x_'='_x not
R8126:8126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8128:8128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8127:8127 Tactics <> n var
R8132:8132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8134:8134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8133:8133 Tactics <> m var
R8111:8113 Coq.Init.Logic <> :type_scope:x_'='_x not
R8105:8105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8107:8108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8110:8110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8109:8109 Tactics <> m var
R8106:8106 Tactics <> n var
R8114:8114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8116:8117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8119:8119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8118:8118 Tactics <> o var
R8115:8115 Tactics <> o var
prf 8292:8304 <> inversion_ex2
R8322:8324 Coq.Init.Datatypes <> nat ind
R8346:8348 Coq.Init.Logic <> :type_scope:x_'='_x not
R8345:8345 Tactics <> n var
R8349:8349 Tactics <> m var
R8333:8335 Coq.Init.Logic <> :type_scope:x_'='_x not
R8330:8330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8332:8332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8331:8331 Tactics <> n var
R8336:8336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8338:8338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8337:8337 Tactics <> m var
def 8471:8483 <> inversion_ex3
R8514:8514 Tactics <> X var
R8524:8527 Poly <> list ind
R8529:8529 Tactics <> X var
R8583:8585 Coq.Init.Logic <> :type_scope:x_'='_x not
R8582:8582 Tactics <> x var
R8586:8586 Tactics <> y var
R8567:8569 Coq.Init.Logic <> :type_scope:x_'='_x not
R8562:8565 Poly <> ::x_'::'_x not
R8561:8561 Tactics <> y var
R8566:8566 Tactics <> l var
R8571:8574 Poly <> ::x_'::'_x not
R8570:8570 Tactics <> x var
R8575:8575 Tactics <> j var
R8546:8548 Coq.Init.Logic <> :type_scope:x_'='_x not
R8536:8539 Poly <> ::x_'::'_x not
R8535:8535 Tactics <> x var
R8541:8544 Poly <> ::x_'::'_x not
R8540:8540 Tactics <> y var
R8545:8545 Tactics <> l var
R8550:8553 Poly <> ::x_'::'_x not
R8549:8549 Tactics <> z var
R8554:8554 Tactics <> j var
prf 8849:8859 <> beq_nat_0_l
R8899:8901 Coq.Init.Logic <> :type_scope:x_'='_x not
R8898:8898 Tactics <> n var
R8887:8889 Coq.Init.Logic <> :type_scope:x_'='_x not
R8876:8882 Basics <> beq_nat def
R8886:8886 Tactics <> n var
R8890:8893 Basics <> true constr
prf 9809:9821 <> inversion_ex4
R9837:9839 Coq.Init.Datatypes <> nat ind
R9863:9865 Coq.Init.Logic <> :type_scope:x_'='_x not
R9859:9861 Basics <> :nat_scope:x_'+'_x not
R9848:9850 Coq.Init.Logic <> :type_scope:x_'='_x not
R9845:9845 Coq.Init.Datatypes <> S constr
R9847:9847 Tactics <> n var
R9851:9851 Coq.Init.Datatypes <> O constr
prf 9927:9939 <> inversion_ex5
R9957:9959 Coq.Init.Datatypes <> nat ind
R9986:9988 Coq.Init.Logic <> :type_scope:x_'='_x not
R9983:9983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9985:9985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9984:9984 Tactics <> n var
R9989:9989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9991:9991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9990:9990 Tactics <> m var
R9970:9972 Coq.Init.Logic <> :type_scope:x_'='_x not
R9965:9969 Basics <> false constr
R9973:9976 Basics <> true constr
def 10503:10515 <> inversion_ex6
R10572:10572 Tactics <> X var
R10582:10585 Poly <> list ind
R10587:10587 Tactics <> X var
R10637:10639 Coq.Init.Logic <> :type_scope:x_'='_x not
R10636:10636 Tactics <> x var
R10640:10640 Tactics <> z var
R10621:10623 Coq.Init.Logic <> :type_scope:x_'='_x not
R10616:10619 Poly <> ::x_'::'_x not
R10615:10615 Tactics <> y var
R10620:10620 Tactics <> l var
R10625:10628 Poly <> ::x_'::'_x not
R10624:10624 Tactics <> z var
R10629:10629 Tactics <> j var
R10604:10606 Coq.Init.Logic <> :type_scope:x_'='_x not
R10594:10597 Poly <> ::x_'::'_x not
R10593:10593 Tactics <> x var
R10599:10602 Poly <> ::x_'::'_x not
R10598:10598 Tactics <> y var
R10603:10603 Tactics <> l var
R10607:10608 Poly <> ::'['_']' not
prf 11797:11803 <> f_equal
R11836:11836 Tactics <> B var
R11831:11831 Tactics <> A var
R11845:11845 Tactics <> A var
R11863:11865 Coq.Init.Logic <> :type_scope:x_'='_x not
R11860:11860 Tactics <> f var
R11862:11862 Tactics <> x var
R11866:11866 Tactics <> f var
R11868:11868 Tactics <> y var
R11852:11854 Coq.Init.Logic <> :type_scope:x_'='_x not
R11851:11851 Tactics <> x var
R11855:11855 Tactics <> y var
prf 12371:12375 <> S_inj
R12393:12395 Coq.Init.Datatypes <> nat ind
R12403:12406 Basics <> bool ind
R12459:12461 Coq.Init.Logic <> :type_scope:x_'='_x not
R12448:12454 Basics <> beq_nat def
R12458:12458 Tactics <> m var
R12456:12456 Tactics <> n var
R12462:12462 Tactics <> b var
R12434:12436 Coq.Init.Logic <> :type_scope:x_'='_x not
R12415:12421 Basics <> beq_nat def
R12430:12430 Coq.Init.Datatypes <> S constr
R12432:12432 Tactics <> m var
R12424:12424 Coq.Init.Datatypes <> S constr
R12426:12426 Tactics <> n var
R12437:12437 Tactics <> b var
prf 13300:13306 <> silly3'
R13322:13324 Coq.Init.Datatypes <> nat ind
R13415:13417 Coq.Init.Logic <> :type_scope:x_'='_x not
R13411:13414 Basics <> true constr
R13418:13424 Basics <> beq_nat def
R13427:13427 Coq.Init.Datatypes <> S constr
R13430:13430 Coq.Init.Datatypes <> S constr
R13432:13432 Tactics <> n var
R13390:13392 Coq.Init.Logic <> :type_scope:x_'='_x not
R13386:13389 Basics <> true constr
R13393:13399 Basics <> beq_nat def
R13401:13401 Tactics <> n var
R13372:13374 Coq.Init.Logic <> :type_scope:x_'='_x not
R13353:13359 Basics <> beq_nat def
R13362:13362 Coq.Init.Datatypes <> S constr
R13365:13365 Coq.Init.Datatypes <> S constr
R13367:13367 Tactics <> n var
R13375:13378 Basics <> true constr
R13342:13344 Coq.Init.Logic <> :type_scope:x_'='_x not
R13331:13337 Basics <> beq_nat def
R13339:13339 Tactics <> n var
R13345:13348 Basics <> true constr
prf 14311:14328 <> plus_n_n_injective
R14372:14374 Coq.Init.Logic <> :type_scope:x_'='_x not
R14371:14371 Tactics <> n var
R14375:14375 Tactics <> m var
R14354:14356 Coq.Init.Logic <> :type_scope:x_'='_x not
R14350:14352 Basics <> :nat_scope:x_'+'_x not
R14349:14349 Tactics <> n var
R14353:14353 Tactics <> n var
R14358:14360 Basics <> :nat_scope:x_'+'_x not
R14357:14357 Tactics <> m var
R14361:14361 Tactics <> m var
R14547:14555 Induction <> plus_n_Sm thm
R14547:14555 Induction <> plus_n_Sm thm
R14575:14583 Induction <> plus_n_Sm thm
R14575:14583 Induction <> plus_n_Sm thm
prf 15567:15589 <> double_injective_FAILED
R15639:15641 Coq.Init.Logic <> :type_scope:x_'='_x not
R15638:15638 Tactics <> n var
R15642:15642 Tactics <> m var
R15618:15620 Coq.Init.Logic <> :type_scope:x_'='_x not
R15610:15615 Induction <> double def
R15617:15617 Tactics <> n var
R15621:15626 Induction <> double def
R15628:15628 Tactics <> m var
R15922:15928 Tactics <> f_equal thm
R15922:15928 Tactics <> f_equal thm
prf 18164:18179 <> double_injective
R18229:18231 Coq.Init.Logic <> :type_scope:x_'='_x not
R18228:18228 Tactics <> n var
R18232:18232 Tactics <> m var
R18208:18210 Coq.Init.Logic <> :type_scope:x_'='_x not
R18200:18205 Induction <> double def
R18207:18207 Tactics <> n var
R18211:18216 Induction <> double def
R18218:18218 Tactics <> m var
R19105:19111 Tactics <> f_equal thm
R19105:19111 Tactics <> f_equal thm
prf 20012:20023 <> beq_nat_true
R20066:20068 Coq.Init.Logic <> :type_scope:x_'='_x not
R20065:20065 Tactics <> n var
R20069:20069 Tactics <> m var
R20054:20056 Coq.Init.Logic <> :type_scope:x_'='_x not
R20043:20049 Basics <> beq_nat def
R20053:20053 Tactics <> m var
R20051:20051 Tactics <> n var
R20057:20060 Basics <> true constr
R20217:20223 Tactics <> f_equal thm
R20217:20223 Tactics <> f_equal thm
prf 20806:20834 <> double_injective_take2_FAILED
R20884:20886 Coq.Init.Logic <> :type_scope:x_'='_x not
R20883:20883 Tactics <> n var
R20887:20887 Tactics <> m var
R20863:20865 Coq.Init.Logic <> :type_scope:x_'='_x not
R20855:20860 Induction <> double def
R20862:20862 Tactics <> n var
R20866:20871 Induction <> double def
R20873:20873 Tactics <> m var
R21167:21173 Tactics <> f_equal thm
R21167:21173 Tactics <> f_equal thm
prf 22109:22130 <> double_injective_take2
R22180:22182 Coq.Init.Logic <> :type_scope:x_'='_x not
R22179:22179 Tactics <> n var
R22183:22183 Tactics <> m var
R22159:22161 Coq.Init.Logic <> :type_scope:x_'='_x not
R22151:22156 Induction <> double def
R22158:22158 Tactics <> n var
R22162:22167 Induction <> double def
R22169:22169 Tactics <> m var
R22646:22652 Tactics <> f_equal thm
R22646:22652 Tactics <> f_equal thm
prf 24852:24862 <> beq_id_true
R24902:24904 Coq.Init.Logic <> :type_scope:x_'='_x not
R24901:24901 Tactics <> x var
R24905:24905 Tactics <> y var
R24890:24892 Coq.Init.Logic <> :type_scope:x_'='_x not
R24880:24885 Lists <> beq_id def
R24889:24889 Tactics <> y var
R24887:24887 Tactics <> x var
R24893:24896 Basics <> true constr
R24966:24968 Coq.Init.Logic <> :type_scope:x_'='_x not
R24966:24968 Coq.Init.Logic <> :type_scope:x_'='_x not
R24981:24992 Tactics <> beq_nat_true thm
R24981:24992 Tactics <> beq_nat_true thm
prf 25150:25169 <> nth_error_after_last
R25184:25186 Coq.Init.Datatypes <> nat ind
R25205:25208 Poly <> list ind
R25210:25210 Tactics <> X var
R25253:25255 Coq.Init.Logic <> :type_scope:x_'='_x not
R25240:25248 Poly <> nth_error def
R25252:25252 Tactics <> n var
R25250:25250 Tactics <> l var
R25256:25259 Poly <> None constr
R25227:25229 Coq.Init.Logic <> :type_scope:x_'='_x not
R25219:25224 Poly <> length def
R25226:25226 Tactics <> l var
R25230:25230 Tactics <> n var
def 25682:25687 <> square
R25695:25697 Basics <> :nat_scope:x_'*'_x not
R25694:25694 Tactics <> n var
R25698:25698 Tactics <> n var
prf 25769:25779 <> square_mult
R25809:25811 Coq.Init.Logic <> :type_scope:x_'='_x not
R25795:25800 Tactics <> square def
R25804:25806 Basics <> :nat_scope:x_'*'_x not
R25803:25803 Tactics <> n var
R25807:25807 Tactics <> m var
R25820:25822 Basics <> :nat_scope:x_'*'_x not
R25812:25817 Tactics <> square def
R25819:25819 Tactics <> n var
R25823:25828 Tactics <> square def
R25830:25830 Tactics <> m var
R26147:26152 Tactics <> square def
R26477:26486 Induction <> mult_assoc thm
R26477:26486 Induction <> mult_assoc thm
R26512:26514 Coq.Init.Logic <> :type_scope:x_'='_x not
R26508:26510 Basics <> :nat_scope:x_'*'_x not
R26504:26506 Basics <> :nat_scope:x_'*'_x not
R26520:26522 Basics <> :nat_scope:x_'*'_x not
R26516:26518 Basics <> :nat_scope:x_'*'_x not
R26512:26514 Coq.Init.Logic <> :type_scope:x_'='_x not
R26508:26510 Basics <> :nat_scope:x_'*'_x not
R26504:26506 Basics <> :nat_scope:x_'*'_x not
R26520:26522 Basics <> :nat_scope:x_'*'_x not
R26516:26518 Basics <> :nat_scope:x_'*'_x not
R26539:26547 Induction <> mult_comm thm
R26539:26547 Induction <> mult_comm thm
R26556:26565 Induction <> mult_assoc thm
R26556:26565 Induction <> mult_assoc thm
R26591:26600 Induction <> mult_assoc thm
R26591:26600 Induction <> mult_assoc thm
def 26988:26990 <> foo
R26996:26998 Coq.Init.Datatypes <> nat ind
prf 27211:27222 <> silly_fact_1
R27245:27247 Coq.Init.Logic <> :type_scope:x_'='_x not
R27241:27243 Basics <> :nat_scope:x_'+'_x not
R27236:27238 Tactics <> foo def
R27240:27240 Tactics <> m var
R27259:27261 Basics <> :nat_scope:x_'+'_x not
R27248:27250 Tactics <> foo def
R27254:27256 Basics <> :nat_scope:x_'+'_x not
R27253:27253 Tactics <> m var
def 27492:27494 <> bar
R27509:27509 Tactics <> x var
R27520:27520 Coq.Init.Datatypes <> O constr
R27531:27531 Coq.Init.Datatypes <> S constr
prf 27605:27623 <> silly_fact_2_FAILED
R27646:27648 Coq.Init.Logic <> :type_scope:x_'='_x not
R27642:27644 Basics <> :nat_scope:x_'+'_x not
R27637:27639 Tactics <> bar def
R27641:27641 Tactics <> m var
R27660:27662 Basics <> :nat_scope:x_'+'_x not
R27649:27651 Tactics <> bar def
R27655:27657 Basics <> :nat_scope:x_'+'_x not
R27654:27654 Tactics <> m var
prf 28654:28665 <> silly_fact_2
R28688:28690 Coq.Init.Logic <> :type_scope:x_'='_x not
R28684:28686 Basics <> :nat_scope:x_'+'_x not
R28679:28681 Tactics <> bar def
R28683:28683 Tactics <> m var
R28702:28704 Basics <> :nat_scope:x_'+'_x not
R28691:28693 Tactics <> bar def
R28697:28699 Basics <> :nat_scope:x_'+'_x not
R28696:28696 Tactics <> m var
prf 29055:29067 <> silly_fact_2'
R29090:29092 Coq.Init.Logic <> :type_scope:x_'='_x not
R29086:29088 Basics <> :nat_scope:x_'+'_x not
R29081:29083 Tactics <> bar def
R29085:29085 Tactics <> m var
R29104:29106 Basics <> :nat_scope:x_'+'_x not
R29093:29095 Tactics <> bar def
R29099:29101 Basics <> :nat_scope:x_'+'_x not
R29098:29098 Tactics <> m var
R29138:29140 Tactics <> bar def
def 29784:29791 <> sillyfun
R29798:29800 Coq.Init.Datatypes <> nat ind
R29805:29808 Basics <> bool ind
R29818:29824 Basics <> beq_nat def
R29826:29826 Tactics <> n var
R29851:29857 Basics <> beq_nat def
R29859:29859 Tactics <> n var
R29881:29885 Basics <> false constr
R29868:29872 Basics <> false constr
R29835:29839 Basics <> false constr
prf 29897:29910 <> sillyfun_false
R29926:29928 Coq.Init.Datatypes <> nat ind
R29944:29946 Coq.Init.Logic <> :type_scope:x_'='_x not
R29934:29941 Tactics <> sillyfun def
R29943:29943 Tactics <> n var
R29947:29951 Basics <> false constr
R29980:29987 Tactics <> sillyfun def
R30002:30008 Basics <> beq_nat def
R30002:30008 Basics <> beq_nat def
R30102:30108 Basics <> beq_nat def
R30102:30108 Basics <> beq_nat def
def 30999:31003 <> split
R31023:31026 Poly <> list ind
R31030:31030 Poly <> :type_scope:x_'*'_x not
R31029:31029 Tactics <> X var
R31031:31031 Tactics <> Y var
R31052:31052 Poly <> :type_scope:x_'*'_x not
R31059:31063 Poly <> :type_scope:x_'*'_x not
R31070:31070 Poly <> :type_scope:x_'*'_x not
R31053:31056 Poly <> list ind
R31058:31058 Tactics <> X var
R31064:31067 Poly <> list ind
R31069:31069 Tactics <> Y var
R31083:31083 Tactics <> l var
R31094:31095 Poly <> ::'['_']' not
R31100:31100 Poly <> ::'('_x_','_x_')' not
R31103:31104 Poly <> ::'('_x_','_x_')' not
R31107:31107 Poly <> ::'('_x_','_x_')' not
R31101:31102 Poly <> ::'['_']' not
R31105:31106 Poly <> ::'['_']' not
R31119:31122 Poly <> ::x_'::'_x not
R31113:31113 Poly <> ::'('_x_','_x_')' not
R31115:31116 Poly <> ::'('_x_','_x_')' not
R31118:31118 Poly <> ::'('_x_','_x_')' not
R31140:31144 Tactics <> split def
R31161:31161 Poly <> ::'('_x_','_x_')' not
R31164:31165 Poly <> ::'('_x_','_x_')' not
R31168:31168 Poly <> ::'('_x_','_x_')' not
R31173:31173 Poly <> ::'('_x_','_x_')' not
R31181:31182 Poly <> ::'('_x_','_x_')' not
R31190:31190 Poly <> ::'('_x_','_x_')' not
R31175:31178 Poly <> ::x_'::'_x not
R31184:31187 Poly <> ::x_'::'_x not
prf 31300:31312 <> combine_split
R31332:31335 Poly <> list ind
R31339:31341 Poly <> :type_scope:x_'*'_x not
R31338:31338 Tactics <> X var
R31342:31342 Tactics <> Y var
R31392:31394 Coq.Init.Logic <> :type_scope:x_'='_x not
R31379:31385 Poly <> combine def
R31390:31391 Tactics <> l2 var
R31387:31388 Tactics <> l1 var
R31395:31395 Tactics <> l var
R31362:31364 Coq.Init.Logic <> :type_scope:x_'='_x not
R31355:31359 Tactics <> split def
R31361:31361 Tactics <> l var
R31365:31365 Poly <> ::'('_x_','_x_')' not
R31368:31369 Poly <> ::'('_x_','_x_')' not
R31372:31372 Poly <> ::'('_x_','_x_')' not
R31366:31367 Tactics <> l1 var
R31370:31371 Tactics <> l2 var
def 31781:31789 <> sillyfun1
R31796:31798 Coq.Init.Datatypes <> nat ind
R31803:31806 Basics <> bool ind
R31816:31822 Basics <> beq_nat def
R31824:31824 Tactics <> n var
R31848:31854 Basics <> beq_nat def
R31856:31856 Tactics <> n var
R31877:31881 Basics <> false constr
R31865:31868 Basics <> true constr
R31833:31836 Basics <> true constr
prf 32140:32159 <> sillyfun1_odd_FAILED
R32175:32177 Coq.Init.Datatypes <> nat ind
R32219:32221 Coq.Init.Logic <> :type_scope:x_'='_x not
R32213:32216 Basics <> oddb def
R32218:32218 Tactics <> n var
R32222:32225 Basics <> true constr
R32197:32199 Coq.Init.Logic <> :type_scope:x_'='_x not
R32186:32194 Tactics <> sillyfun1 def
R32196:32196 Tactics <> n var
R32200:32203 Basics <> true constr
R32257:32265 Tactics <> sillyfun1 def
R32286:32292 Basics <> beq_nat def
R32286:32292 Basics <> beq_nat def
prf 33142:33154 <> sillyfun1_odd
R33170:33172 Coq.Init.Datatypes <> nat ind
R33214:33216 Coq.Init.Logic <> :type_scope:x_'='_x not
R33208:33211 Basics <> oddb def
R33213:33213 Tactics <> n var
R33217:33220 Basics <> true constr
R33192:33194 Coq.Init.Logic <> :type_scope:x_'='_x not
R33181:33189 Tactics <> sillyfun1 def
R33191:33191 Tactics <> n var
R33195:33198 Basics <> true constr
R33252:33260 Tactics <> sillyfun1 def
R33281:33287 Basics <> beq_nat def
R33281:33287 Basics <> beq_nat def
R33536:33547 Tactics <> beq_nat_true thm
R33536:33547 Tactics <> beq_nat_true thm
R33834:33840 Basics <> beq_nat def
R33834:33840 Basics <> beq_nat def
R33900:33911 Tactics <> beq_nat_true thm
R33900:33911 Tactics <> beq_nat_true thm
prf 34075:34096 <> bool_fn_applied_thrice
R34122:34125 Basics <> bool ind
R34114:34117 Basics <> bool ind
R34133:34136 Basics <> bool ind
R34153:34155 Coq.Init.Logic <> :type_scope:x_'='_x not
R34142:34142 Tactics <> f var
R34145:34145 Tactics <> f var
R34148:34148 Tactics <> f var
R34150:34150 Tactics <> b var
R34156:34156 Tactics <> f var
R34158:34158 Tactics <> b var
R34210:34213 Basics <> true constr
R34210:34213 Basics <> true constr
R34292:34296 Basics <> false constr
R34292:34296 Basics <> false constr
R34392:34396 Basics <> false constr
R34392:34396 Basics <> false constr
R34426:34429 Basics <> true constr
R34426:34429 Basics <> true constr
prf 36846:36856 <> beq_nat_sym
R36874:36876 Coq.Init.Datatypes <> nat ind
R36893:36895 Coq.Init.Logic <> :type_scope:x_'='_x not
R36882:36888 Basics <> beq_nat def
R36892:36892 Tactics <> m var
R36890:36890 Tactics <> n var
R36896:36902 Basics <> beq_nat def
R36906:36906 Tactics <> n var
R36904:36904 Tactics <> m var
prf 38209:38219 <> beq_nat_n_n
R38244:38246 Coq.Init.Logic <> :type_scope:x_'='_x not
R38233:38239 Basics <> beq_nat def
R38243:38243 Tactics <> n var
R38241:38241 Tactics <> n var
R38247:38250 Basics <> true constr
prf 38336:38348 <> beq_nat_trans
R38427:38429 Coq.Init.Logic <> :type_scope:x_'='_x not
R38416:38422 Basics <> beq_nat def
R38426:38426 Tactics <> p var
R38424:38424 Tactics <> n var
R38430:38433 Basics <> true constr
R38403:38405 Coq.Init.Logic <> :type_scope:x_'='_x not
R38392:38398 Basics <> beq_nat def
R38402:38402 Tactics <> p var
R38400:38400 Tactics <> m var
R38406:38409 Basics <> true constr
R38379:38381 Coq.Init.Logic <> :type_scope:x_'='_x not
R38368:38374 Basics <> beq_nat def
R38378:38378 Tactics <> m var
R38376:38376 Tactics <> n var
R38382:38385 Basics <> true constr
R38461:38472 Tactics <> beq_nat_true thm
R38461:38472 Tactics <> beq_nat_true thm
R38488:38499 Tactics <> beq_nat_true thm
R38488:38499 Tactics <> beq_nat_true thm
R38543:38553 Tactics <> beq_nat_n_n thm
R38543:38553 Tactics <> beq_nat_n_n thm
def 39269:39291 <> split_combine_statement
R39321:39324 Poly <> list ind
R39326:39326 Tactics <> X var
R39334:39337 Poly <> list ind
R39339:39339 Tactics <> Y var
R39404:39406 Coq.Init.Logic <> :type_scope:x_'='_x not
R39397:39401 Tactics <> split def
R39403:39403 Tactics <> l var
R39407:39407 Poly <> ::'('_x_','_x_')' not
R39410:39411 Poly <> ::'('_x_','_x_')' not
R39414:39414 Poly <> ::'('_x_','_x_')' not
R39408:39409 Tactics <> l1 var
R39412:39413 Tactics <> l2 var
R39387:39389 Coq.Init.Logic <> :type_scope:x_'='_x not
R39374:39380 Poly <> combine def
R39385:39386 Tactics <> l2 var
R39382:39383 Tactics <> l1 var
R39390:39390 Tactics <> l var
R39356:39358 Coq.Init.Logic <> :type_scope:x_'='_x not
R39347:39352 Poly <> length def
R39354:39355 Tactics <> l1 var
R39359:39364 Poly <> length def
R39366:39367 Tactics <> l2 var
prf 39683:39695 <> split_combine
R39699:39721 Tactics <> split_combine_statement def
R39941:39947 Poly <> combine def
R39941:39947 Poly <> combine def
prf 40218:40232 <> filter_exercise
R40267:40270 Basics <> bool ind
R40262:40262 Tactics <> X var
R40307:40307 Tactics <> X var
R40318:40321 Poly <> list ind
R40323:40323 Tactics <> X var
R40370:40372 Coq.Init.Logic <> :type_scope:x_'='_x not
R40364:40367 Tactics <> test var
R40369:40369 Tactics <> x var
R40373:40376 Basics <> true constr
R40345:40347 Coq.Init.Logic <> :type_scope:x_'='_x not
R40332:40337 Poly <> filter def
R40344:40344 Tactics <> l var
R40339:40342 Tactics <> test var
R40349:40352 Poly <> ::x_'::'_x not
R40348:40348 Tactics <> x var
R40353:40354 Tactics <> lf var
def 41537:41543 <> forallb
R41564:41567 Basics <> bool ind
R41559:41559 Tactics <> X var
R41574:41577 Poly <> list ind
R41579:41579 Tactics <> X var
R41584:41587 Basics <> bool ind
R41600:41600 Tactics <> l var
R41611:41612 Poly <> ::'['_']' not
R41617:41620 Basics <> true constr
R41627:41630 Poly <> ::x_'::'_x not
R41637:41640 Basics <> andb def
R41649:41655 Tactics <> forallb def
R41657:41657 Tactics <> p var
R41643:41643 Tactics <> p var
def 41680:41686 <> existsb
R41707:41710 Basics <> bool ind
R41702:41702 Tactics <> X var
R41717:41720 Poly <> list ind
R41722:41722 Tactics <> X var
R41727:41730 Basics <> bool ind
R41743:41743 Tactics <> l var
R41754:41755 Poly <> ::'['_']' not
R41760:41764 Basics <> false constr
R41771:41774 Poly <> ::x_'::'_x not
R41781:41783 Basics <> orb def
R41792:41798 Tactics <> existsb def
R41800:41800 Tactics <> p var
R41786:41786 Tactics <> p var
def 41825:41832 <> existsb'
R41853:41856 Basics <> bool ind
R41848:41848 Tactics <> X var
R41863:41866 Poly <> list ind
R41868:41868 Tactics <> X var
R41873:41876 Basics <> bool ind
R41883:41886 Basics <> negb def
R41889:41895 Tactics <> forallb def
R41919:41919 Tactics <> l var
R41907:41910 Basics <> negb def
R41913:41913 Tactics <> p var
R41915:41915 Tactics <> x var
prf 41932:41953 <> existsb_equiv_existsb'
R41984:41987 Basics <> bool ind
R41979:41979 Tactics <> X var
R41994:41997 Poly <> list ind
R41999:41999 Tactics <> X var
R42005:42005 Coq.Init.Logic <> :type_scope:x_'='_x not
R42017:42021 Coq.Init.Logic <> :type_scope:x_'='_x not
R42034:42034 Coq.Init.Logic <> :type_scope:x_'='_x not
R42006:42012 Tactics <> existsb def
R42016:42016 Tactics <> l var
R42014:42014 Tactics <> p var
R42022:42029 Tactics <> existsb' def
R42033:42033 Tactics <> l var
R42031:42031 Tactics <> p var
R42063:42070 Tactics <> existsb' def
