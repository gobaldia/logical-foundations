DIGEST 42d6923ce4b6bf2729df2c08b025813a
FLogic
R98:104 Tactics <> <> lib
R992:994 Coq.Init.Logic <> :type_scope:x_'='_x not
R1034:1036 Coq.Init.Datatypes <> nat ind
R1044:1046 Coq.Init.Logic <> :type_scope:x_'='_x not
R1040:1042 Basics <> :nat_scope:x_'+'_x not
R1039:1039 Logic <> n var
R1043:1043 Logic <> m var
R1048:1050 Basics <> :nat_scope:x_'+'_x not
R1047:1047 Logic <> m var
R1051:1051 Logic <> n var
R1298:1300 Coq.Init.Logic <> :type_scope:x_'='_x not
R1338:1340 Coq.Init.Datatypes <> nat ind
R1344:1346 Coq.Init.Logic <> :type_scope:x_'='_x not
R1343:1343 Logic <> n var
R1374:1376 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1709:1721 <> plus_2_2_is_4
R1732:1734 Coq.Init.Logic <> :type_scope:x_'='_x not
R1728:1730 Basics <> :nat_scope:x_'+'_x not
def 1972:1980 <> plus_fact
R1997:1999 Coq.Init.Logic <> :type_scope:x_'='_x not
R1993:1995 Basics <> :nat_scope:x_'+'_x not
R2009:2017 Logic <> plus_fact def
prf 2202:2218 <> plus_fact_is_true
R2224:2232 Logic <> plus_fact def
def 2557:2564 <> is_three
R2571:2573 Coq.Init.Datatypes <> nat ind
R2589:2591 Coq.Init.Logic <> :type_scope:x_'='_x not
R2588:2588 Logic <> n var
R2601:2608 Logic <> is_three def
def 2866:2874 <> injective
R2892:2892 Logic <> B var
R2887:2887 Logic <> A var
R2913:2913 Logic <> A var
R2930:2932 Coq.Init.Logic <> :type_scope:x_'='_x not
R2929:2929 Logic <> x var
R2933:2933 Logic <> y var
R2919:2921 Coq.Init.Logic <> :type_scope:x_'='_x not
R2916:2916 Logic <> f var
R2918:2918 Logic <> x var
R2922:2922 Logic <> f var
R2924:2924 Logic <> y var
prf 2943:2950 <> succ_inj
R2954:2962 Logic <> injective def
R2964:2964 Coq.Init.Datatypes <> S constr
R3297:3298 Coq.Init.Logic <> eq ind
def 3896:3906 <> and_example
R3919:3922 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3915:3917 Coq.Init.Logic <> :type_scope:x_'='_x not
R3911:3913 Basics <> :nat_scope:x_'+'_x not
R3928:3930 Coq.Init.Logic <> :type_scope:x_'='_x not
R3924:3926 Basics <> :nat_scope:x_'*'_x not
prf 4337:4345 <> and_intro
R4379:4382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4378:4378 Logic <> A var
R4383:4383 Logic <> B var
R4373:4373 Logic <> B var
R4368:4368 Logic <> A var
def 4688:4699 <> and_example'
R4712:4715 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4708:4710 Coq.Init.Logic <> :type_scope:x_'='_x not
R4704:4706 Basics <> :nat_scope:x_'+'_x not
R4721:4723 Coq.Init.Logic <> :type_scope:x_'='_x not
R4717:4719 Basics <> :nat_scope:x_'*'_x not
R4742:4750 Logic <> and_intro thm
R4742:4750 Logic <> and_intro thm
def 4879:4890 <> and_exercise
R4909:4911 Coq.Init.Datatypes <> nat ind
R4932:4935 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4928:4930 Coq.Init.Logic <> :type_scope:x_'='_x not
R4927:4927 Logic <> n var
R4937:4939 Coq.Init.Logic <> :type_scope:x_'='_x not
R4936:4936 Logic <> m var
R4919:4921 Coq.Init.Logic <> :type_scope:x_'='_x not
R4915:4917 Basics <> :nat_scope:x_'+'_x not
R4914:4914 Logic <> n var
R4918:4918 Logic <> m var
prf 5570:5581 <> and_example2
R5600:5602 Coq.Init.Datatypes <> nat ind
R5628:5630 Coq.Init.Logic <> :type_scope:x_'='_x not
R5624:5626 Basics <> :nat_scope:x_'+'_x not
R5623:5623 Logic <> n var
R5627:5627 Logic <> m var
R5610:5613 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5606:5608 Coq.Init.Logic <> :type_scope:x_'='_x not
R5605:5605 Logic <> n var
R5615:5617 Coq.Init.Logic <> :type_scope:x_'='_x not
R5614:5614 Logic <> m var
prf 5882:5894 <> and_example2'
R5913:5915 Coq.Init.Datatypes <> nat ind
R5941:5943 Coq.Init.Logic <> :type_scope:x_'='_x not
R5937:5939 Basics <> :nat_scope:x_'+'_x not
R5936:5936 Logic <> n var
R5940:5940 Logic <> m var
R5923:5926 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5919:5921 Coq.Init.Logic <> :type_scope:x_'='_x not
R5918:5918 Logic <> n var
R5928:5930 Coq.Init.Logic <> :type_scope:x_'='_x not
R5927:5927 Logic <> m var
prf 6222:6235 <> and_example2''
R6254:6256 Coq.Init.Datatypes <> nat ind
R6282:6284 Coq.Init.Logic <> :type_scope:x_'='_x not
R6278:6280 Basics <> :nat_scope:x_'+'_x not
R6277:6277 Logic <> n var
R6281:6281 Logic <> m var
R6269:6271 Coq.Init.Logic <> :type_scope:x_'='_x not
R6268:6268 Logic <> m var
R6260:6262 Coq.Init.Logic <> :type_scope:x_'='_x not
R6259:6259 Logic <> n var
prf 6637:6648 <> and_example3
R6667:6669 Coq.Init.Datatypes <> nat ind
R6690:6692 Coq.Init.Logic <> :type_scope:x_'='_x not
R6686:6688 Basics <> :nat_scope:x_'*'_x not
R6685:6685 Logic <> n var
R6689:6689 Logic <> m var
R6677:6679 Coq.Init.Logic <> :type_scope:x_'='_x not
R6673:6675 Basics <> :nat_scope:x_'+'_x not
R6672:6672 Logic <> n var
R6676:6676 Logic <> m var
R6763:6766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6759:6761 Coq.Init.Logic <> :type_scope:x_'='_x not
R6768:6770 Coq.Init.Logic <> :type_scope:x_'='_x not
R6763:6766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6759:6761 Coq.Init.Logic <> :type_scope:x_'='_x not
R6768:6770 Coq.Init.Logic <> :type_scope:x_'='_x not
R6785:6796 Logic <> and_exercise def
R6785:6796 Logic <> and_exercise def
prf 7058:7062 <> proj1
R7097:7097 Logic <> P var
R7088:7091 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7087:7087 Logic <> P var
R7092:7092 Logic <> Q var
prf 7202:7206 <> proj2
R7241:7241 Logic <> Q var
R7232:7235 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7231:7231 Logic <> P var
R7236:7236 Logic <> Q var
prf 7526:7535 <> and_commut
R7571:7574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7570:7570 Logic <> Q var
R7575:7575 Logic <> P var
R7561:7564 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7560:7560 Logic <> P var
R7565:7565 Logic <> Q var
prf 7946:7954 <> and_assoc
R7998:7998 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8005:8009 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8000:8003 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7999:7999 Logic <> P var
R8004:8004 Logic <> Q var
R8010:8010 Logic <> R var
R7982:7986 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7993:7993 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7981:7981 Logic <> P var
R7988:7991 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7987:7987 Logic <> Q var
R7992:7992 Logic <> R var
R8324:8326 Coq.Init.Logic <> and ind
prf 8889:8898 <> or_example
R8917:8919 Coq.Init.Datatypes <> nat ind
R8945:8947 Coq.Init.Logic <> :type_scope:x_'='_x not
R8941:8943 Basics <> :nat_scope:x_'*'_x not
R8940:8940 Logic <> n var
R8944:8944 Logic <> m var
R8927:8930 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8923:8925 Coq.Init.Logic <> :type_scope:x_'='_x not
R8922:8922 Logic <> n var
R8932:8934 Coq.Init.Logic <> :type_scope:x_'='_x not
R8931:8931 Logic <> m var
R9162:9169 Coq.Init.Peano <> mult_n_O thm
R9162:9169 Coq.Init.Peano <> mult_n_O thm
prf 9529:9536 <> or_intro
R9565:9568 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9564:9564 Logic <> A var
R9569:9569 Logic <> B var
R9559:9559 Logic <> A var
prf 9719:9730 <> zero_or_succ
R9747:9749 Coq.Init.Datatypes <> nat ind
R9757:9760 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9753:9755 Coq.Init.Logic <> :type_scope:x_'='_x not
R9752:9752 Logic <> n var
R9762:9764 Coq.Init.Logic <> :type_scope:x_'='_x not
R9761:9761 Logic <> n var
R9765:9765 Coq.Init.Datatypes <> S constr
R9768:9771 Coq.Init.Peano <> pred def
R9773:9773 Logic <> n var
prf 9924:9932 <> mult_eq_0
R9968:9971 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9964:9966 Coq.Init.Logic <> :type_scope:x_'='_x not
R9963:9963 Logic <> n var
R9973:9975 Coq.Init.Logic <> :type_scope:x_'='_x not
R9972:9972 Logic <> m var
R9955:9957 Coq.Init.Logic <> :type_scope:x_'='_x not
R9951:9953 Basics <> :nat_scope:x_'*'_x not
R9950:9950 Logic <> n var
R9954:9954 Logic <> m var
prf 10137:10145 <> or_commut
R10182:10185 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10181:10181 Logic <> Q var
R10186:10186 Logic <> P var
R10171:10174 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10170:10170 Logic <> P var
R10175:10175 Logic <> Q var
mod 11237:11241 <> MyNot
def 11256:11258 MyNot not
R11277:11281 Coq.Init.Logic <> False ind
R11272:11272 Logic <> P var
R11304:11306 Logic MyNot not def
not 11294 MyNot :type_scope:'~'_x
R11332:11334 Logic MyNot not def
R11366:11370 Logic <> <> mod
prf 11604:11621 <> ex_falso_quodlibet
R11653:11653 Logic <> P var
R11644:11648 Coq.Init.Logic <> False ind
prf 12063:12081 <> not_implies_our_not
R12134:12134 Logic <> Q var
R12129:12129 Logic <> P var
R12104:12105 Coq.Init.Logic <> :type_scope:'~'_x not
R12106:12106 Logic <> P var
prf 12304:12315 <> zero_not_one
R12319:12320 Coq.Init.Logic <> :type_scope:'~'_x not
R12326:12326 Coq.Init.Logic <> :type_scope:'~'_x not
R12322:12324 Coq.Init.Logic <> :type_scope:x_'='_x not
R12485:12488 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12518:12530 <> zero_not_one'
R12535:12538 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12944:12952 <> not_False
R12958:12959 Coq.Init.Logic <> :type_scope:'~'_x not
R12960:12964 Coq.Init.Logic <> False ind
R12983:12985 Coq.Init.Logic <> not def
prf 13024:13053 <> contradiction_implies_anything
R13091:13091 Logic <> Q var
R13080:13083 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13079:13079 Logic <> P var
R13084:13084 Coq.Init.Logic <> :type_scope:'~'_x not
R13085:13085 Logic <> P var
R13155:13157 Coq.Init.Logic <> not def
prf 13214:13223 <> double_neg
R13251:13251 Coq.Init.Logic <> :type_scope:'~'_x not
R13252:13252 Coq.Init.Logic <> :type_scope:'~'_x not
R13253:13253 Logic <> P var
R13246:13246 Logic <> P var
R13308:13310 Coq.Init.Logic <> not def
prf 13626:13639 <> contrapositive
R13685:13685 Coq.Init.Logic <> :type_scope:'~'_x not
R13686:13686 Logic <> P var
R13679:13679 Coq.Init.Logic <> :type_scope:'~'_x not
R13680:13680 Logic <> Q var
R13672:13672 Logic <> Q var
R13667:13667 Logic <> P var
prf 13836:13858 <> not_both_true_and_false
R13881:13883 Coq.Init.Logic <> :type_scope:'~'_x not
R13891:13891 Coq.Init.Logic <> :type_scope:'~'_x not
R13885:13888 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13884:13884 Logic <> P var
R13889:13889 Coq.Init.Logic <> :type_scope:'~'_x not
R13890:13890 Logic <> P var
def 14023:14043 <> informal_not_PNP_TODO
prf 14667:14683 <> not_true_is_false
R14698:14701 Basics <> bool ind
R14720:14722 Coq.Init.Logic <> :type_scope:x_'='_x not
R14719:14719 Logic <> b var
R14723:14727 Basics <> false constr
R14707:14710 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R14706:14706 Logic <> b var
R14711:14714 Basics <> true constr
R14782:14784 Coq.Init.Logic <> not def
R14802:14819 Logic <> ex_falso_quodlibet thm
R14802:14819 Logic <> ex_falso_quodlibet thm
prf 15030:15047 <> not_true_is_false'
R15062:15065 Basics <> bool ind
R15084:15086 Coq.Init.Logic <> :type_scope:x_'='_x not
R15083:15083 Logic <> b var
R15087:15091 Basics <> false constr
R15071:15074 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15070:15070 Logic <> b var
R15075:15078 Basics <> true constr
R15147:15149 Coq.Init.Logic <> not def
prf 15526:15537 <> True_is_true
R15541:15544 Coq.Init.Logic <> True ind
R15560:15560 Coq.Init.Logic <> I constr
R15560:15560 Coq.Init.Logic <> I constr
mod 16240:16244 <> MyIff
def 16259:16261 MyIff iff
R16279:16279 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16286:16291 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16298:16298 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16285:16285 Logic <> Q var
R16280:16280 Logic <> P var
R16297:16297 Logic <> P var
R16292:16292 Logic <> Q var
R16325:16327 Logic MyIff iff def
not 16311 MyIff :type_scope:x_'<->'_x
R16429:16433 Logic <> <> mod
prf 16445:16451 <> iff_sym
R16491:16495 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16490:16490 Logic <> Q var
R16496:16496 Logic <> P var
R16478:16482 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16477:16477 Logic <> P var
R16483:16483 Logic <> Q var
prf 16625:16642 <> not_true_iff_false
R16667:16671 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16659:16662 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16658:16658 Logic <> b var
R16663:16666 Basics <> true constr
R16673:16675 Coq.Init.Logic <> :type_scope:x_'='_x not
R16672:16672 Logic <> b var
R16676:16680 Basics <> false constr
R16752:16768 Logic <> not_true_is_false thm
R16752:16768 Logic <> not_true_is_false thm
prf 17035:17042 <> iff_refl
R17066:17070 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17065:17065 Logic <> P var
R17071:17071 Logic <> P var
prf 17156:17164 <> iff_trans
R17219:17223 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17218:17218 Logic <> P var
R17224:17224 Logic <> R var
R17206:17210 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17205:17205 Logic <> Q var
R17211:17211 Logic <> R var
R17193:17197 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17192:17192 Logic <> P var
R17198:17198 Logic <> Q var
prf 17470:17492 <> or_distributes_over_and
R17532:17536 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17520:17524 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17531:17531 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17519:17519 Logic <> P var
R17526:17529 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17525:17525 Logic <> Q var
R17530:17530 Logic <> R var
R17537:17537 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17544:17549 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17556:17556 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17539:17542 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17538:17538 Logic <> P var
R17543:17543 Logic <> Q var
R17551:17554 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17550:17550 Logic <> P var
R17555:17555 Logic <> R var
R17778:17785 Coq.Init.Logic <> and_comm thm
R17778:17785 Coq.Init.Logic <> and_comm thm
R17796:17799 Coq.Init.Logic <> conj constr
R17796:17799 Coq.Init.Logic <> conj constr
R18191:18208 Coq.Setoids.Setoid <> <> lib
prf 18362:18367 <> mult_0
R18392:18396 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18388:18390 Coq.Init.Logic <> :type_scope:x_'='_x not
R18384:18386 Basics <> :nat_scope:x_'*'_x not
R18383:18383 Logic <> n var
R18387:18387 Logic <> m var
R18402:18405 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18398:18400 Coq.Init.Logic <> :type_scope:x_'='_x not
R18397:18397 Logic <> n var
R18407:18409 Coq.Init.Logic <> :type_scope:x_'='_x not
R18406:18406 Logic <> m var
R18439:18447 Logic <> mult_eq_0 thm
R18439:18447 Logic <> mult_eq_0 thm
R18460:18469 Logic <> or_example thm
R18460:18469 Logic <> or_example thm
prf 18484:18491 <> or_assoc
R18531:18535 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18519:18523 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18530:18530 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18518:18518 Logic <> P var
R18525:18528 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18524:18524 Logic <> Q var
R18529:18529 Logic <> R var
R18536:18536 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18543:18547 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18538:18541 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18537:18537 Logic <> P var
R18542:18542 Logic <> Q var
R18548:18548 Logic <> R var
prf 18996:19003 <> mult_0_3
R19036:19040 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19032:19034 Coq.Init.Logic <> :type_scope:x_'='_x not
R19028:19030 Basics <> :nat_scope:x_'*'_x not
R19024:19026 Basics <> :nat_scope:x_'*'_x not
R19023:19023 Logic <> n var
R19027:19027 Logic <> m var
R19031:19031 Logic <> p var
R19046:19049 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19042:19044 Coq.Init.Logic <> :type_scope:x_'='_x not
R19041:19041 Logic <> n var
R19055:19058 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19051:19053 Coq.Init.Logic <> :type_scope:x_'='_x not
R19050:19050 Logic <> m var
R19060:19062 Coq.Init.Logic <> :type_scope:x_'='_x not
R19059:19059 Logic <> p var
R19099:19104 Logic <> mult_0 thm
R19099:19104 Logic <> mult_0 thm
R19115:19120 Logic <> mult_0 thm
R19115:19120 Logic <> mult_0 thm
R19131:19138 Logic <> or_assoc thm
R19131:19138 Logic <> or_assoc thm
prf 19336:19352 <> apply_iff_example
R19371:19373 Coq.Init.Datatypes <> nat ind
R19394:19397 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19390:19392 Coq.Init.Logic <> :type_scope:x_'='_x not
R19389:19389 Logic <> n var
R19399:19401 Coq.Init.Logic <> :type_scope:x_'='_x not
R19398:19398 Logic <> m var
R19381:19383 Coq.Init.Logic <> :type_scope:x_'='_x not
R19377:19379 Basics <> :nat_scope:x_'*'_x not
R19376:19376 Logic <> n var
R19380:19380 Logic <> m var
R19434:19439 Logic <> mult_0 thm
R19434:19439 Logic <> mult_0 thm
prf 20313:20324 <> four_is_even
R20328:20334 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20342:20343 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20339:20341 Coq.Init.Datatypes <> nat ind
R20345:20347 Coq.Init.Logic <> :type_scope:x_'='_x not
R20349:20351 Basics <> :nat_scope:x_'+'_x not
R20348:20348 Logic <> n var
R20352:20352 Logic <> n var
prf 20587:20602 <> exists_example_2
R20646:20652 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20654:20655 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20657:20659 Coq.Init.Logic <> :type_scope:x_'='_x not
R20656:20656 Logic <> n var
R20661:20663 Basics <> :nat_scope:x_'+'_x not
R20664:20664 Logic <> o var
R20619:20625 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20627:20628 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20630:20632 Coq.Init.Logic <> :type_scope:x_'='_x not
R20629:20629 Logic <> n var
R20634:20636 Basics <> :nat_scope:x_'+'_x not
R20637:20637 Logic <> m var
R20765:20767 Basics <> :nat_scope:x_'+'_x not
R20765:20767 Basics <> :nat_scope:x_'+'_x not
prf 21032:21046 <> dist_not_exists
R21071:21071 Logic <> X var
R21104:21106 Coq.Init.Logic <> :type_scope:'~'_x not
R21122:21122 Coq.Init.Logic <> :type_scope:'~'_x not
R21107:21113 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21115:21116 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21117:21118 Coq.Init.Logic <> :type_scope:'~'_x not
R21119:21119 Logic <> P var
R21121:21121 Logic <> x var
R21096:21096 Logic <> P var
R21098:21098 Logic <> x var
R21157:21159 Coq.Init.Logic <> not def
prf 21362:21375 <> dist_exists_or
R21402:21402 Logic <> X var
R21416:21416 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21437:21442 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21417:21423 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21425:21426 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21430:21433 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21427:21427 Logic <> P var
R21429:21429 Logic <> x var
R21434:21434 Logic <> Q var
R21436:21436 Logic <> x var
R21443:21443 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21457:21462 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21476:21476 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21444:21450 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21452:21453 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21454:21454 Logic <> P var
R21456:21456 Logic <> x var
R21463:21469 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21471:21472 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21473:21473 Logic <> Q var
R21475:21475 Logic <> x var
def 22654:22655 <> In
R22673:22673 Logic <> A var
R22681:22684 Poly <> list ind
R22686:22686 Logic <> A var
R22707:22707 Logic <> l var
R22718:22719 Poly <> ::'['_']' not
R22724:22728 Coq.Init.Logic <> False ind
R22736:22739 Poly <> ::x_'::'_x not
R22752:22755 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22748:22750 Coq.Init.Logic <> :type_scope:x_'='_x not
R22751:22751 Logic <> x var
R22756:22757 Logic <> In def
R22759:22759 Logic <> x var
def 22893:22904 <> In_example_1
R22908:22909 Logic <> In def
R22913:22913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22915:22916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22918:22919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22921:22922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22924:22925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22927:22927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23024:23035 <> In_example_2
R23068:23074 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23077:23078 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23080:23082 Coq.Init.Logic <> :type_scope:x_'='_x not
R23079:23079 Logic <> n var
R23084:23086 Basics <> :nat_scope:x_'*'_x not
R23087:23088 Logic <> n' var
R23051:23052 Logic <> In def
R23056:23056 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23058:23059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23061:23061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23054:23054 Logic <> n var
prf 23550:23555 <> In_map
R23591:23591 Logic <> B var
R23586:23586 Logic <> A var
R23599:23602 Poly <> list ind
R23604:23604 Logic <> A var
R23612:23612 Logic <> A var
R23634:23635 Logic <> In def
R23644:23646 Poly <> map def
R23650:23650 Logic <> l var
R23648:23648 Logic <> f var
R23638:23638 Logic <> f var
R23640:23640 Logic <> x var
R23620:23621 Logic <> In def
R23625:23625 Logic <> l var
R23623:23623 Logic <> x var
prf 24393:24402 <> In_map_iff
R24438:24438 Logic <> B var
R24433:24433 Logic <> A var
R24446:24449 Poly <> list ind
R24451:24451 Logic <> A var
R24459:24459 Logic <> B var
R24481:24489 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24467:24468 Logic <> In def
R24473:24475 Poly <> map def
R24479:24479 Logic <> l var
R24477:24477 Logic <> f var
R24470:24470 Logic <> y var
R24490:24496 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24498:24499 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24507:24510 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24503:24505 Coq.Init.Logic <> :type_scope:x_'='_x not
R24500:24500 Logic <> f var
R24502:24502 Logic <> x var
R24506:24506 Logic <> y var
R24511:24512 Logic <> In def
R24516:24516 Logic <> l var
R24514:24514 Logic <> x var
prf 24761:24770 <> In_app_iff
R24791:24791 Logic <> A var
R24809:24813 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24797:24798 Logic <> In def
R24804:24805 Poly <> ::x_'++'_x not
R24803:24803 Logic <> l var
R24806:24807 Logic <> l' var
R24800:24800 Logic <> a var
R24820:24823 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24814:24815 Logic <> In def
R24819:24819 Logic <> l var
R24817:24817 Logic <> a var
R24824:24825 Logic <> In def
R24829:24830 Logic <> l' var
R24827:24827 Logic <> a var
def 25530:25532 <> All
R25550:25550 Logic <> T var
R25566:25569 Poly <> list ind
R25571:25571 Logic <> T var
R25592:25592 Logic <> l var
R25603:25604 Poly <> ::'['_']' not
R25609:25612 Coq.Init.Logic <> True ind
R25619:25622 Poly <> ::x_'::'_x not
R25632:25635 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25629:25629 Logic <> P var
R25636:25638 Logic <> All def
R25640:25640 Logic <> P var
prf 25677:25682 <> All_In
R25702:25702 Logic <> T var
R25718:25721 Poly <> list ind
R25723:25723 Logic <> T var
R25731:25731 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25755:25764 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25752:25752 Logic <> P var
R25754:25754 Logic <> x var
R25742:25743 Logic <> In def
R25747:25747 Logic <> l var
R25745:25745 Logic <> x var
R25765:25767 Logic <> All def
R25771:25771 Logic <> l var
R25769:25769 Logic <> P var
R25836:25836 Coq.Init.Logic <> I constr
R25836:25836 Coq.Init.Logic <> I constr
def 26478:26493 <> combine_odd_even
R26509:26511 Coq.Init.Datatypes <> nat ind
R26524:26526 Coq.Init.Datatypes <> nat ind
R26553:26556 Basics <> oddb def
R26558:26558 Logic <> n var
R26585:26589 Logic <> Peven var
R26591:26591 Logic <> n var
R26569:26572 Logic <> Podd var
R26574:26574 Logic <> n var
prf 26663:26684 <> combine_odd_even_intro
R26711:26713 Coq.Init.Datatypes <> nat ind
R26729:26731 Coq.Init.Datatypes <> nat ind
R26807:26822 Logic <> combine_odd_even def
R26835:26835 Logic <> n var
R26829:26833 Logic <> Peven var
R26824:26827 Logic <> Podd var
R26791:26795 Logic <> Peven var
R26797:26797 Logic <> n var
R26779:26781 Coq.Init.Logic <> :type_scope:x_'='_x not
R26773:26776 Basics <> oddb def
R26778:26778 Logic <> n var
R26782:26786 Basics <> false constr
R26757:26760 Logic <> Podd var
R26762:26762 Logic <> n var
R26746:26748 Coq.Init.Logic <> :type_scope:x_'='_x not
R26740:26743 Basics <> oddb def
R26745:26745 Logic <> n var
R26749:26752 Basics <> true constr
R26864:26879 Logic <> combine_odd_even def
R26894:26897 Basics <> oddb def
R26894:26897 Basics <> oddb def
prf 26966:26990 <> combine_odd_even_elim_odd
R27017:27019 Coq.Init.Datatypes <> nat ind
R27035:27037 Coq.Init.Datatypes <> nat ind
R27103:27106 Logic <> Podd var
R27108:27108 Logic <> n var
R27088:27090 Coq.Init.Logic <> :type_scope:x_'='_x not
R27082:27085 Basics <> oddb def
R27087:27087 Logic <> n var
R27091:27094 Basics <> true constr
R27045:27060 Logic <> combine_odd_even def
R27073:27073 Logic <> n var
R27067:27071 Logic <> Peven var
R27062:27065 Logic <> Podd var
R27137:27152 Logic <> combine_odd_even def
prf 27207:27232 <> combine_odd_even_elim_even
R27259:27261 Coq.Init.Datatypes <> nat ind
R27277:27279 Coq.Init.Datatypes <> nat ind
R27346:27350 Logic <> Peven var
R27352:27352 Logic <> n var
R27330:27332 Coq.Init.Logic <> :type_scope:x_'='_x not
R27324:27327 Basics <> oddb def
R27329:27329 Logic <> n var
R27333:27337 Basics <> false constr
R27287:27302 Logic <> combine_odd_even def
R27315:27315 Logic <> n var
R27309:27313 Logic <> Peven var
R27304:27307 Logic <> Podd var
R27381:27396 Logic <> combine_odd_even def
R28175:28183 Induction <> plus_comm thm
prf 29504:29513 <> plus_comm3
R29544:29546 Coq.Init.Logic <> :type_scope:x_'='_x not
R29534:29537 Basics <> :nat_scope:x_'+'_x not
R29543:29543 Basics <> :nat_scope:x_'+'_x not
R29533:29533 Logic <> x var
R29539:29541 Basics <> :nat_scope:x_'+'_x not
R29538:29538 Logic <> y var
R29542:29542 Logic <> z var
R29547:29547 Basics <> :nat_scope:x_'+'_x not
R29553:29556 Basics <> :nat_scope:x_'+'_x not
R29549:29551 Basics <> :nat_scope:x_'+'_x not
R29548:29548 Logic <> z var
R29552:29552 Logic <> y var
R29557:29557 Logic <> x var
R29830:29838 Induction <> plus_comm thm
R29830:29838 Induction <> plus_comm thm
R29851:29859 Induction <> plus_comm thm
R29851:29859 Induction <> plus_comm thm
prf 30131:30146 <> plus_comm3_take2
R30177:30179 Coq.Init.Logic <> :type_scope:x_'='_x not
R30167:30170 Basics <> :nat_scope:x_'+'_x not
R30176:30176 Basics <> :nat_scope:x_'+'_x not
R30166:30166 Logic <> x var
R30172:30174 Basics <> :nat_scope:x_'+'_x not
R30171:30171 Logic <> y var
R30175:30175 Logic <> z var
R30180:30180 Basics <> :nat_scope:x_'+'_x not
R30186:30189 Basics <> :nat_scope:x_'+'_x not
R30182:30184 Basics <> :nat_scope:x_'+'_x not
R30181:30181 Logic <> z var
R30185:30185 Logic <> y var
R30190:30190 Logic <> x var
R30226:30234 Induction <> plus_comm thm
R30226:30234 Induction <> plus_comm thm
R30256:30258 Coq.Init.Logic <> :type_scope:x_'='_x not
R30252:30254 Basics <> :nat_scope:x_'+'_x not
R30260:30262 Basics <> :nat_scope:x_'+'_x not
R30256:30258 Coq.Init.Logic <> :type_scope:x_'='_x not
R30252:30254 Basics <> :nat_scope:x_'+'_x not
R30260:30262 Basics <> :nat_scope:x_'+'_x not
R30279:30287 Induction <> plus_comm thm
R30279:30287 Induction <> plus_comm thm
prf 30546:30561 <> plus_comm3_take3
R30592:30594 Coq.Init.Logic <> :type_scope:x_'='_x not
R30582:30585 Basics <> :nat_scope:x_'+'_x not
R30591:30591 Basics <> :nat_scope:x_'+'_x not
R30581:30581 Logic <> x var
R30587:30589 Basics <> :nat_scope:x_'+'_x not
R30586:30586 Logic <> y var
R30590:30590 Logic <> z var
R30595:30595 Basics <> :nat_scope:x_'+'_x not
R30601:30604 Basics <> :nat_scope:x_'+'_x not
R30597:30599 Basics <> :nat_scope:x_'+'_x not
R30596:30596 Logic <> z var
R30600:30600 Logic <> y var
R30605:30605 Logic <> x var
R30641:30649 Induction <> plus_comm thm
R30641:30649 Induction <> plus_comm thm
R30663:30671 Induction <> plus_comm thm
R30663:30671 Induction <> plus_comm thm
def 31152:31171 <> lemma_application_ex
R31189:31191 Coq.Init.Datatypes <> nat ind
R31200:31203 Poly <> list ind
R31205:31207 Coq.Init.Datatypes <> nat ind
R31254:31256 Coq.Init.Logic <> :type_scope:x_'='_x not
R31253:31253 Logic <> n var
R31215:31216 Logic <> In def
R31221:31223 Poly <> map def
R31242:31243 Logic <> ns var
R31236:31238 Basics <> :nat_scope:x_'*'_x not
R31235:31235 Logic <> m var
R31218:31218 Logic <> n var
R31296:31300 Logic <> proj1 thm
R31307:31316 Logic <> In_map_iff prfax
R31296:31300 Logic <> proj1 thm
R31307:31316 Logic <> In_map_iff prfax
R31368:31375 Induction <> mult_0_r thm
R31368:31375 Induction <> mult_0_r thm
def 33302:33322 <> function_equality_ex1
R33332:33334 Coq.Init.Logic <> :type_scope:x_'='_x not
R33326:33329 Coq.Init.Peano <> plus def
R33335:33338 Coq.Init.Peano <> plus def
R33341:33344 Coq.Init.Peano <> pred def
def 34068:34088 <> function_equality_ex2
R34094:34094 Coq.Init.Logic <> :type_scope:x_'='_x not
R34112:34116 Coq.Init.Logic <> :type_scope:x_'='_x not
R34134:34134 Coq.Init.Logic <> :type_scope:x_'='_x not
R34104:34107 Coq.Init.Peano <> plus def
R34109:34109 Logic <> x var
R34126:34129 Coq.Init.Peano <> plus def
R34133:34133 Logic <> x var
ax 34278:34302 <> functional_extensionality
R34373:34373 Logic <> Y var
R34368:34368 Logic <> X var
R34409:34411 Coq.Init.Logic <> :type_scope:x_'='_x not
R34408:34408 Logic <> f var
R34412:34412 Logic <> g var
R34390:34390 Logic <> X var
R34397:34399 Coq.Init.Logic <> :type_scope:x_'='_x not
R34394:34394 Logic <> f var
R34396:34396 Logic <> x var
R34400:34400 Logic <> g var
R34402:34402 Logic <> x var
def 34703:34723 <> function_equality_ex2
R34729:34729 Coq.Init.Logic <> :type_scope:x_'='_x not
R34747:34751 Coq.Init.Logic <> :type_scope:x_'='_x not
R34769:34769 Coq.Init.Logic <> :type_scope:x_'='_x not
R34739:34742 Coq.Init.Peano <> plus def
R34744:34744 Logic <> x var
R34761:34764 Coq.Init.Peano <> plus def
R34768:34768 Logic <> x var
R34787:34811 Logic <> functional_extensionality prfax
R34787:34811 Logic <> functional_extensionality prfax
R34832:34840 Induction <> plus_comm thm
R34832:34840 Induction <> plus_comm thm
R35497:35517 Logic <> function_equality_ex2 def
def 36061:36070 <> rev_append
R36085:36088 Poly <> list ind
R36090:36090 Logic <> X var
R36095:36098 Poly <> list ind
R36100:36100 Logic <> X var
R36113:36114 Logic <> l1 var
R36125:36126 Poly <> ::'['_']' not
R36131:36132 Logic <> l2 var
R36139:36142 Poly <> ::x_'::'_x not
R36150:36159 Logic <> rev_append def
R36167:36170 Poly <> ::x_'::'_x not
R36171:36172 Logic <> l2 var
def 36194:36199 <> tr_rev
R36210:36213 Poly <> list ind
R36215:36215 Logic <> X var
R36220:36223 Poly <> list ind
R36225:36225 Logic <> X var
R36232:36241 Logic <> rev_append def
R36245:36246 Poly <> ::'['_']' not
R36243:36243 Logic <> l var
prf 36602:36613 <> empty_neutro
R36640:36640 Logic <> X var
R36649:36651 Coq.Init.Logic <> :type_scope:x_'='_x not
R36646:36646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36648:36648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36647:36647 Logic <> x var
R36654:36657 Poly <> ::x_'++'_x not
R36652:36653 Poly <> ::'['_']' not
R36658:36658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36660:36660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36659:36659 Logic <> x var
prf 36707:36725 <> double_empty_neutro
R36752:36752 Logic <> X var
R36773:36776 Coq.Init.Logic <> :type_scope:x_'='_x not
R36786:36786 Coq.Init.Logic <> :type_scope:x_'='_x not
R36760:36763 Poly <> ::x_'++'_x not
R36758:36759 Poly <> ::'['_']' not
R36766:36769 Poly <> ::x_'++'_x not
R36764:36765 Poly <> ::'['_']' not
R36770:36770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36772:36772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36771:36771 Logic <> x var
R36779:36782 Poly <> ::x_'++'_x not
R36777:36778 Poly <> ::'['_']' not
R36783:36783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36785:36785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36784:36784 Logic <> x var
prf 36833:36846 <> tr_rev_correct
R36869:36871 Coq.Init.Logic <> :type_scope:x_'='_x not
R36861:36866 Logic <> tr_rev def
R36868:36868 Logic <> X var
R36873:36875 Poly <> rev def
R36877:36877 Logic <> X var
R36896:36920 Logic <> functional_extensionality prfax
R36896:36920 Logic <> functional_extensionality prfax
R36932:36937 Logic <> tr_rev def
R37008:37019 Logic <> empty_neutro thm
R37008:37019 Logic <> empty_neutro thm
prf 37881:37892 <> evenb_double
R37922:37924 Coq.Init.Logic <> :type_scope:x_'='_x not
R37906:37910 Basics <> evenb def
R37913:37918 Induction <> double def
R37920:37920 Logic <> k var
R37925:37928 Basics <> true constr
prf 38082:38098 <> evenb_double_conv
R38114:38120 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38122:38123 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38125:38127 Coq.Init.Logic <> :type_scope:x_'='_x not
R38124:38124 Logic <> n var
R38131:38135 Basics <> evenb def
R38137:38137 Logic <> n var
R38174:38174 Coq.Init.Datatypes <> S constr
R38177:38182 Induction <> double def
R38184:38184 Logic <> k var
R38144:38149 Induction <> double def
R38151:38151 Logic <> k var
prf 38354:38367 <> even_bool_prop
R38397:38401 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R38390:38392 Coq.Init.Logic <> :type_scope:x_'='_x not
R38383:38387 Basics <> evenb def
R38389:38389 Logic <> n var
R38393:38396 Basics <> true constr
R38402:38408 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38410:38411 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38413:38415 Coq.Init.Logic <> :type_scope:x_'='_x not
R38412:38412 Logic <> n var
R38416:38421 Induction <> double def
R38423:38423 Logic <> k var
R38476:38492 Logic <> evenb_double_conv prfax
R38476:38492 Logic <> evenb_double_conv prfax
R38595:38606 Logic <> evenb_double thm
R38595:38606 Logic <> evenb_double thm
prf 38967:38982 <> beq_nat_true_iff
R39001:39003 Coq.Init.Datatypes <> nat ind
R39028:39032 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39021:39023 Coq.Init.Logic <> :type_scope:x_'='_x not
R39008:39014 Basics <> beq_nat def
R39019:39020 Logic <> n2 var
R39016:39017 Logic <> n1 var
R39024:39027 Basics <> true constr
R39035:39037 Coq.Init.Logic <> :type_scope:x_'='_x not
R39033:39034 Logic <> n1 var
R39038:39039 Logic <> n2 var
R39082:39093 Tactics <> beq_nat_true thm
R39082:39093 Tactics <> beq_nat_true thm
R39132:39143 Induction <> beq_nat_refl thm
R39132:39143 Induction <> beq_nat_refl thm
def 40378:40390 <> is_even_prime
R40403:40405 Coq.Init.Logic <> :type_scope:x_'='_x not
R40402:40402 Logic <> n var
R40425:40429 Basics <> false constr
R40413:40416 Basics <> true constr
def 41961:41969 <> even_1000
R41973:41979 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41981:41982 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41987:41989 Coq.Init.Logic <> :type_scope:x_'='_x not
R41990:41995 Induction <> double def
R41997:41997 Logic <> k var
def 42231:42240 <> even_1000'
R42254:42256 Coq.Init.Logic <> :type_scope:x_'='_x not
R42244:42248 Basics <> evenb def
R42257:42260 Basics <> true constr
def 42483:42493 <> even_1000''
R42497:42503 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42505:42506 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42511:42513 Coq.Init.Logic <> :type_scope:x_'='_x not
R42514:42519 Induction <> double def
R42521:42521 Logic <> k var
R42537:42550 Logic <> even_bool_prop thm
R42537:42550 Logic <> even_bool_prop thm
prf 43343:43357 <> andb_true_elim1
R43374:43377 Basics <> bool ind
R43402:43404 Coq.Init.Logic <> :type_scope:x_'='_x not
R43401:43401 Logic <> b var
R43405:43408 Basics <> true constr
R43390:43392 Coq.Init.Logic <> :type_scope:x_'='_x not
R43382:43385 Basics <> andb def
R43389:43389 Logic <> c var
R43387:43387 Logic <> b var
R43393:43396 Basics <> true constr
prf 43537:43551 <> andb_true_elim2
R43568:43571 Basics <> bool ind
R43596:43598 Coq.Init.Logic <> :type_scope:x_'='_x not
R43595:43595 Logic <> c var
R43599:43602 Basics <> true constr
R43584:43586 Coq.Init.Logic <> :type_scope:x_'='_x not
R43576:43579 Basics <> andb def
R43583:43583 Logic <> c var
R43581:43581 Logic <> b var
R43587:43590 Basics <> true constr
prf 43729:43741 <> andb_true_iff
R43758:43761 Basics <> bool ind
R43781:43785 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43774:43776 Coq.Init.Logic <> :type_scope:x_'='_x not
R43768:43771 Basics <> ::x_'&&'_x not
R43766:43767 Logic <> b1 var
R43772:43773 Logic <> b2 var
R43777:43780 Basics <> true constr
R43795:43798 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43788:43790 Coq.Init.Logic <> :type_scope:x_'='_x not
R43786:43787 Logic <> b1 var
R43791:43794 Basics <> true constr
R43801:43803 Coq.Init.Logic <> :type_scope:x_'='_x not
R43799:43800 Logic <> b2 var
R43804:43807 Basics <> true constr
R43859:43873 Logic <> andb_true_elim1 thm
R43859:43873 Logic <> andb_true_elim1 thm
R43898:43912 Logic <> andb_true_elim2 thm
R43898:43912 Logic <> andb_true_elim2 thm
prf 44033:44044 <> orb_true_iff
R44079:44083 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44072:44074 Coq.Init.Logic <> :type_scope:x_'='_x not
R44066:44069 Basics <> ::x_'||'_x not
R44064:44065 Logic <> b1 var
R44070:44071 Logic <> b2 var
R44075:44078 Basics <> true constr
R44093:44096 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R44086:44088 Coq.Init.Logic <> :type_scope:x_'='_x not
R44084:44085 Logic <> b1 var
R44089:44092 Basics <> true constr
R44099:44101 Coq.Init.Logic <> :type_scope:x_'='_x not
R44097:44098 Logic <> b2 var
R44102:44105 Basics <> true constr
prf 44612:44628 <> beq_nat_false_iff
R44645:44647 Coq.Init.Datatypes <> nat ind
R44671:44675 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44663:44665 Coq.Init.Logic <> :type_scope:x_'='_x not
R44652:44658 Basics <> beq_nat def
R44662:44662 Logic <> y var
R44660:44660 Logic <> x var
R44666:44670 Basics <> false constr
R44677:44680 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R44676:44676 Logic <> x var
R44681:44681 Logic <> y var
R44729:44731 Coq.Init.Logic <> not def
R44783:44785 Coq.Init.Logic <> :type_scope:x_'='_x not
R44772:44778 Basics <> beq_nat def
R44786:44789 Basics <> true constr
R44783:44785 Coq.Init.Logic <> :type_scope:x_'='_x not
R44772:44778 Basics <> beq_nat def
R44786:44789 Basics <> true constr
R44799:44814 Logic <> beq_nat_true_iff thm
R44799:44814 Logic <> beq_nat_true_iff thm
R44984:44986 Coq.Init.Logic <> not def
def 45638:45645 <> beq_list
R45675:45678 Basics <> bool ind
R45670:45670 Logic <> A var
R45665:45665 Logic <> A var
R45708:45711 Poly <> list ind
R45713:45713 Logic <> A var
R45718:45721 Basics <> bool ind
R45734:45735 Logic <> l1 var
R45748:45749 Poly <> ::'['_']' not
R45760:45761 Logic <> l2 var
R45776:45777 Poly <> ::'['_']' not
R45782:45785 Basics <> true constr
R45800:45804 Basics <> false constr
R45823:45826 Poly <> ::x_'::'_x not
R45839:45840 Logic <> l2 var
R45855:45856 Poly <> ::'['_']' not
R45861:45865 Basics <> false constr
R45876:45879 Poly <> ::x_'::'_x not
R45892:45894 Logic <> beq var
R45915:45919 Basics <> false constr
R45924:45928 Basics <> false constr
R45940:45943 Basics <> true constr
R45948:45955 Logic <> beq_list def
R45957:45959 Logic <> beq var
prf 46003:46019 <> beq_list_true_iff
R46051:46054 Basics <> bool ind
R46046:46046 Logic <> A var
R46041:46041 Logic <> A var
R46153:46157 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46146:46148 Coq.Init.Logic <> :type_scope:x_'='_x not
R46128:46135 Logic <> beq_list def
R46144:46145 Logic <> l2 var
R46141:46142 Logic <> l1 var
R46137:46139 Logic <> beq var
R46149:46152 Basics <> true constr
R46160:46162 Coq.Init.Logic <> :type_scope:x_'='_x not
R46158:46159 Logic <> l1 var
R46163:46164 Logic <> l2 var
R46093:46097 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46086:46088 Coq.Init.Logic <> :type_scope:x_'='_x not
R46077:46079 Logic <> beq var
R46084:46085 Logic <> a2 var
R46081:46082 Logic <> a1 var
R46089:46092 Basics <> true constr
R46100:46102 Coq.Init.Logic <> :type_scope:x_'='_x not
R46098:46099 Logic <> a1 var
R46103:46104 Logic <> a2 var
def 46582:46588 <> forallb
R46614:46617 Basics <> bool ind
R46609:46609 Logic <> X var
R46625:46628 Poly <> list ind
R46630:46630 Logic <> X var
R46635:46638 Basics <> bool ind
R46651:46651 Logic <> l var
R46662:46663 Poly <> ::'['_']' not
R46668:46671 Basics <> true constr
R46678:46681 Poly <> ::x_'::'_x not
R46688:46691 Basics <> andb def
R46703:46709 Logic <> forallb def
R46711:46714 Logic <> test var
R46694:46697 Logic <> test var
prf 46842:46857 <> forallb_true_iff
R46880:46883 Poly <> list ind
R46885:46885 Logic <> X var
R46913:46917 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46906:46908 Coq.Init.Logic <> :type_scope:x_'='_x not
R46892:46898 Logic <> forallb def
R46905:46905 Logic <> l var
R46900:46903 Logic <> test var
R46909:46912 Basics <> true constr
R46918:46920 Logic <> All def
R46947:46947 Logic <> l var
R46938:46940 Coq.Init.Logic <> :type_scope:x_'='_x not
R46932:46935 Logic <> test var
R46937:46937 Logic <> x var
R46941:46944 Basics <> true constr
R47048:47060 Logic <> andb_true_iff thm
R47048:47060 Logic <> andb_true_iff thm
R47163:47175 Logic <> andb_true_iff thm
R47163:47175 Logic <> andb_true_iff thm
def 47813:47827 <> excluded_middle
R47852:47855 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47851:47851 Logic <> P var
R47856:47857 Coq.Init.Logic <> :type_scope:'~'_x not
R47858:47858 Logic <> P var
prf 48618:48643 <> restricted_excluded_middle
R48682:48685 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R48681:48681 Logic <> P var
R48686:48687 Coq.Init.Logic <> :type_scope:'~'_x not
R48688:48688 Logic <> P var
R48663:48667 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48662:48662 Logic <> P var
R48669:48671 Coq.Init.Logic <> :type_scope:x_'='_x not
R48668:48668 Logic <> b var
R48672:48675 Basics <> true constr
prf 48934:48962 <> restricted_excluded_middle_eq
R48980:48982 Coq.Init.Datatypes <> nat ind
R48993:48996 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R48989:48991 Coq.Init.Logic <> :type_scope:x_'='_x not
R48988:48988 Logic <> n var
R48992:48992 Logic <> m var
R48998:49001 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R48997:48997 Logic <> n var
R49002:49002 Logic <> m var
R49035:49060 Logic <> restricted_excluded_middle thm
R49071:49077 Basics <> beq_nat def
R49064:49066 Coq.Init.Logic <> :type_scope:x_'='_x not
R49035:49060 Logic <> restricted_excluded_middle thm
R49071:49077 Basics <> beq_nat def
R49064:49066 Coq.Init.Logic <> :type_scope:x_'='_x not
R49106:49121 Logic <> beq_nat_true_iff thm
R49106:49121 Logic <> beq_nat_true_iff thm
prf 53325:53351 <> excluded_middle_irrefutable
R53373:53374 Coq.Init.Logic <> :type_scope:'~'_x not
R53375:53377 Coq.Init.Logic <> :type_scope:'~'_x not
R53386:53386 Coq.Init.Logic <> :type_scope:'~'_x not
R53379:53382 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53378:53378 Logic <> P var
R53383:53384 Coq.Init.Logic <> :type_scope:'~'_x not
R53385:53385 Logic <> P var
R53415:53417 Coq.Init.Logic <> not def
prf 53939:53953 <> not_exists_dist
R54001:54001 Logic <> X var
R54051:54051 Logic <> P var
R54053:54053 Logic <> x var
R54017:54019 Coq.Init.Logic <> :type_scope:'~'_x not
R54035:54035 Coq.Init.Logic <> :type_scope:'~'_x not
R54020:54026 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54028:54029 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54030:54031 Coq.Init.Logic <> :type_scope:'~'_x not
R54032:54032 Logic <> P var
R54034:54034 Logic <> x var
R53959:53973 Logic <> excluded_middle def
def 54732:54737 <> peirce
R54775:54775 Logic <> P var
R54771:54771 Logic <> P var
R54767:54767 Logic <> Q var
R54764:54764 Logic <> P var
def 54790:54816 <> double_negation_elimination
R54845:54845 Logic <> P var
R54838:54838 Coq.Init.Logic <> :type_scope:'~'_x not
R54839:54839 Coq.Init.Logic <> :type_scope:'~'_x not
R54840:54840 Logic <> P var
def 54860:54880 <> de_morgan_not_and_not
R54920:54921 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54919:54919 Logic <> P var
R54922:54922 Logic <> Q var
R54904:54905 Coq.Init.Logic <> :type_scope:'~'_x not
R54914:54914 Coq.Init.Logic <> :type_scope:'~'_x not
R54908:54911 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54906:54906 Coq.Init.Logic <> :type_scope:'~'_x not
R54907:54907 Logic <> P var
R54912:54912 Coq.Init.Logic <> :type_scope:'~'_x not
R54913:54913 Logic <> Q var
def 54937:54949 <> implies_to_or
R54986:54987 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54984:54984 Coq.Init.Logic <> :type_scope:'~'_x not
R54985:54985 Logic <> P var
R54988:54988 Logic <> Q var
R54977:54977 Logic <> Q var
R54974:54974 Logic <> P var
prf 55001:55033 <> double_negation_implies_de_morgan
R55063:55067 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R55057:55062 Logic <> peirce def
R55068:55082 Logic <> excluded_middle def
R55166:55169 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55170:55170 Coq.Init.Logic <> :type_scope:'~'_x not
R55166:55169 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55170:55170 Coq.Init.Logic <> :type_scope:'~'_x not
R55224:55228 Coq.Init.Logic <> False ind
R55213:55216 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55217:55217 Coq.Init.Logic <> :type_scope:'~'_x not
R55224:55228 Coq.Init.Logic <> False ind
R55213:55216 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55217:55217 Coq.Init.Logic <> :type_scope:'~'_x not
